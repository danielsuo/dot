#!/usr/bin/env bash
# NOTE: This is for Debian-like OS.

# Print all commands being run
set -x

# Fail on first error
set -e

# Script directory
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Prerequisites
echo "INSTALLING ALL THE APTS..."
sudo apt update && sudo apt install -y \
  git \
  curl \
  libevent-dev \
  libncurses-dev \
  build-essential \
  bison \
  pkg-config \
  autoconf \
  automake \
  htop


DOT_PATH=$PATH

echo "CONFIGURING APT..."
git config --global user.email "danielsuo@gmail.com"
git config --global user.name "Daniel Suo"

if ! command -v conda &> /dev/null
then
  echo "INSTALLING PYTHON..."
  MINICONDA=Miniconda3-latest-Linux-x86_64.sh
  curl https://repo.anaconda.com/miniconda/$MINICONDA --output $MINICONDA
  bash $MINICONDA -b -u
  rm -f $MINICONDA
  DOT_PATH=$HOME/miniconda3/bin:$DOT_PATH
fi
# TODO(dsuo): Install python packages.

if ! command -v node &> /dev/null
then
  echo "INSTALLING NODJS..."
  curl -fsSL https://deb.nodesource.com/setup_19.x | sudo -E bash - &&\
  sudo apt-get install -y nodejs

  echo "LINKING CONFIGS..."
fi
rm -rf $HOME/.config $HOME/.tmux.conf
ln -s $SCRIPT_DIR/../home/.config $HOME/.config
ln -s $SCRIPT_DIR/../home/.tmux.conf $HOME/.tmux.conf

if ! command -v nvim &> /dev/null
then
  echo "INSTALLING NEOVIM..."
  NVIM=nvim.appimage
  curl -LO https://github.com/neovim/neovim/releases/latest/download/$NVIM
  chmod u+x $NVIM
  ./$NVIM --appimage-extract
  ./squashfs-root/AppRun --version
  sudo mv squashfs-root /
  sudo ln -s /squashfs-root/AppRun /usr/bin/nvim
  rm -rf $NVIM
fi
curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
nvim +PlugUpdate +UpdateRemotePlugins +qall
git clone https://github.com/powerline/fonts
pushd fonts
./install.sh
popd
rm -rf fonts

if ! command -v tmux &> /dev/null
then
  echo "INSTALLING TMUX..."
  git clone https://github.com/tmux/tmux.git
  pushd tmux
  sh autogen.sh
  ./configure && make -j && sudo make install
  popd
  rm -rf tmux
fi

if [ ! -d $HOME/.tmux/plugins/tpm ]
then
  git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
fi
~/.tmux/plugins/tpm/bin/install_plugins

if [ !-d $HOME/.fzf ]
then
  echo "INSTALLING FZF..."
  git clone --depth 1 https://github.com/junegunn/fzf.git $HOME/.fzf
fi
yes | $HOME/.fzf/install

echo "UPDATING PATHS..."
echo "export PATH=$DOT_PATH" >> ~/.bashrc
export PATH=$DOT_PATH
echo $PATH

